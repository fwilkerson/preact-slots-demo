{"version":3,"file":"preact-slots.m.js","sources":["../src/slot-provider.js","../src/slot-content.js","../src/slot.js","../src/with-slot.js"],"sourcesContent":["export class SlotProvider {\n\tgetChildContext() {\n\t\treturn {\n\t\t\tslots: {\n\t\t\t\tnamed: {},\n\t\t\t\tonChange: {}\n\t\t\t}\n\t\t};\n\t}\n\n\trender(props) {\n\t\treturn props.children[0];\n\t}\n}\n","export class SlotContent {\n\tapply(slot, content, fireChange) {\n\t\tlet { slots } = this.context;\n\t\tif (slot) {\n\t\t\tslots.named[slot] = content;\n\t\t\tif (fireChange) {\n\t\t\t\tlet update = slots.onChange[slot]\n\t\t\t\tif (update) {\n\t\t\t\t\tupdate();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.apply(this.props.slot, this.props.children, true);\n\t}\n\n\tcomponentWillReceiveProps({ slot, children }) {\n\t\tif (slot!==this.props.slot) {\n\t\t\tthis.apply(this.props.slot, null, false);\n\t\t\tthis.apply(slot, children, true);\n\t\t}\n\t\telse if (children!==this.props.children) {\n\t\t\tthis.apply(slot, children, true);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.apply(this.props.slot, null, true);\n\t}\n\n\trender() {\n\t\treturn null;\n\t}\n}\n","import { Component } from 'preact';\n\nexport function Slot(props, context) {\n\tComponent.call(this, props, context);\n\tlet update = () => {\n\t\tconst {props, state} = this;\n\t\tlet content = this.context.slots.named[props.name];\n\t\tif (!state.content || content != state.content[props.name]) {\n\t\t\tthis.setState({ content: Object.assign({}, state.content, {[props.name]: content}) });\n\t\t}\n\t};\n\tthis.componentDidMount = () => {\n\t\tthis.context.slots.onChange[this.props.name] = update;\n\t};\n\tthis.componentWillUnmount = () => {\n\t\tthis.context.slots.onChange[this.props.name] = update;\n\t};\n\tupdate();\n}\n(Slot.prototype = new Component()).constructor = Slot;\nSlot.prototype.render = function(props, { content = {} }) {\n\tlet child = props.children[0];\n\treturn typeof child==='function' ? child(content[props.name]) : (content[props.name] && content[props.name][0]) || child;\n};\n","import { h } from 'preact';\nimport { Slot } from './slot';\n\nexport function withSlot(name, alias) {\n\treturn Child => props => h(Slot, { name }, content => {\n\t\tlet childProps = {};\n\t\tchildProps[alias || name] = content;\n\t\tfor (let i in props) childProps[i] = props[i];\n\t\treturn h(Child, childProps);\n\t});\n}\n"],"names":["SlotProvider","getChildContext","render","props","children","SlotContent","Slot","context","Component","call","this","let","update","state","content","slots","named","name","setState","Object","assign","componentDidMount","onChange","componentWillUnmount","withSlot","alias","Child","h","childProps","i","apply","slot","fireChange","componentWillReceiveProps","ref","prototype","constructor","child"],"mappings":"0CAAO,IAAMA,2BACZC,6EASAC,gBAAOC,UACCA,EAAMC,SAAS,ICXjB,IAAMC,eCEN,SAASC,EAAKH,EAAOI,gBAC3BC,EAAUC,KAAKC,KAAMP,EAAOI,GAC5BI,IAAIC,aACH,IAAOT,EAAgBO,QAATG,EAASH,QACnBI,EAAUJ,EAAKH,QAAQQ,MAAMC,MAAMb,EAAMc,MACxCJ,EAAMC,SAAWA,GAAWD,EAAMC,QAAQX,EAAMc,OACpDP,EAAKQ,UAAWJ,QAASK,OAAOC,UAAWP,EAAMC,gBAAWX,EAAMc,MAAOH,SAG3EJ,KAAKW,6BACJX,EAAKH,QAAQQ,MAAMO,SAASZ,EAAKP,MAAMc,MAAQL,GAEhDF,KAAKa,gCACJb,EAAKH,QAAQQ,MAAMO,SAASZ,EAAKP,MAAMc,MAAQL,GAEhDA,ICdM,SAASY,EAASP,EAAMQ,GAC9B,gBAAOC,mBAASvB,UAASwB,EAAErB,QAAQW,YAAQH,GAC1CH,IAAIiB,KAEJ,IAAKjB,IAAIkB,KADTD,EAAWH,GAASR,GAAQH,EACdX,EAAOyB,EAAWC,GAAK1B,EAAM0B,GAC3C,OAAOF,EAAED,EAAOE,mBFPjBE,eAAMC,EAAMjB,EAASkB,OACdjB,EAAUL,KAAKH,iBACjBwB,MACGf,MAAMe,GAAQjB,EAChBkB,GAAY,KACXpB,EAASG,EAAMO,SAASS,GACxBnB,qBAOPS,kCACMS,MAAMpB,KAAKP,MAAM4B,KAAMrB,KAAKP,MAAMC,UAAU,gBAGlD6B,mCAA0BC,OAAEH,SAAM3B,aAC7B2B,IAAOrB,KAAKP,MAAM4B,WAChBD,MAAMpB,KAAKP,MAAM4B,KAAM,MAAM,QAC7BD,MAAMC,EAAM3B,GAAU,IAEnBA,IAAWM,KAAKP,MAAMC,eACzB0B,MAAMC,EAAM3B,GAAU,gBAI7BmB,qCACMO,MAAMpB,KAAKP,MAAM4B,KAAM,MAAM,gBAGnC7B,yBACQ,OCdRI,EAAK6B,UAAY,IAAI3B,GAAa4B,YAAc9B,EACjDA,EAAK6B,UAAUjC,OAAS,SAASC,EAAO+B,sCACvCvB,IAAI0B,EAAQlC,EAAMC,SAAS,GAC3B,MAAsB,mBAARiC,EAAqBA,EAAMvB,EAAQX,EAAMc,OAAUH,EAAQX,EAAMc,OAASH,EAAQX,EAAMc,MAAM,IAAOoB"}